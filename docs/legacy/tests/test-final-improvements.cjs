#!/usr/bin/env node

const { chromium } = require('playwright');

(async () => {
  const browser = await chromium.launch({ headless: false });
  const page = await browser.newPage();
  
  try {
    console.log('üß™ –§–∏–Ω–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö —É–ª—É—á—à–µ–Ω–∏–π –∫–≤–∏–∑-–∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞...');
    
    // 1. –¢–µ—Å—Ç –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∫—Ä–µ—Å—Ç–∏–∫–∞ –Ω–∞ –º–æ–±–∏–ª—å–Ω–æ–º
    console.log('\n1. üî¥ –¢–µ—Å—Ç –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∫—Ä–µ—Å—Ç–∏–∫–∞ –Ω–∞ –º–æ–±–∏–ª—å–Ω–æ–º...');
    await page.setViewportSize({ width: 390, height: 844 }); // iPhone 12
    await page.goto('http://localhost:3000');
    await page.waitForLoadState('networkidle');
    
    // –ò—â–µ–º –∫–Ω–æ–ø–∫—É –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ –ø–æ —Ä–∞–∑–Ω—ã–º –≤–æ–∑–º–æ–∂–Ω—ã–º —Ç–µ–∫—Å—Ç–∞–º
    const calculatorButton = page.locator('text=–†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å').or(
      page.locator('text=–ü–µ—Ä–µ–π—Ç–∏ –∫ —Ä–∞—Å—á–µ—Ç—É')
    ).or(
      page.locator('text=–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä')
    ).or(
      page.locator('.calculator-button')  // –ü–æ –∫–ª–∞—Å—Å—É –µ—Å–ª–∏ –µ—Å—Ç—å
    ).first();
    
    await calculatorButton.scrollIntoViewIfNeeded();
    await calculatorButton.click();
    
    await page.waitForSelector('.quiz-modal', { state: 'visible' });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–∑–∏—Ü–∏—é –∫—Ä–µ—Å—Ç–∏–∫–∞ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≥–æ–ª–æ–≤–∫–∞
    const closeButton = page.locator('.quiz-modal__close');
    const header = page.locator('.quiz-header');
    
    const closeBounds = await closeButton.boundingBox();
    const headerBounds = await header.boundingBox();
    
    const gapBetween = closeBounds.y - headerBounds.y;
    console.log(`   –û—Ç—Å—Ç—É–ø –∫—Ä–µ—Å—Ç–∏–∫–∞ –æ—Ç –≤–µ—Ä—Ö–∞ –∑–∞–≥–æ–ª–æ–≤–∫–∞: ${Math.round(gapBetween)}px`);
    
    if (gapBetween >= 20) {
      console.log('   ‚úÖ –ö—Ä–µ—Å—Ç–∏–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç—Å—Ç—É–ø–∞–µ—Ç –æ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∞');
    } else {
      console.log('   ‚ùå –ö—Ä–µ—Å—Ç–∏–∫ —Å–ª–∏—à–∫–æ–º –±–ª–∏–∑–∫–æ –∫ –∑–∞–≥–æ–ª–æ–≤–∫—É');
    }
    
    await page.screenshot({ path: 'tests/screenshots/test-close-button-mobile.png' });
    
    // 2. –¢–µ—Å—Ç –∑–æ–ª–æ—Ç–æ–≥–æ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –≤—ã–±–æ—Ä–∞
    console.log('\n2. üü° –¢–µ—Å—Ç –∑–æ–ª–æ—Ç–æ–≥–æ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –≤—ã–±–æ—Ä–∞...');
    
    // –í—ã–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤—É—é –æ–ø—Ü–∏—é
    const firstOption = page.locator('.quiz-option').first();
    await firstOption.click();
    await page.waitForTimeout(1000); // –ñ–¥–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–æ–ª–æ—Ç–æ–π –∫—Ä—É–≥ –ø–æ—è–≤–∏–ª—Å—è –∏ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –º–µ—Å—Ç–µ
    const selectedIcon = page.locator('.quiz-option--selected .quiz-option__icon');
    const selectedIconExists = await selectedIcon.count() > 0;
    
    if (selectedIconExists) {
      console.log('   ‚úÖ –í—ã–±—Ä–∞–Ω–Ω–∞—è –æ–ø—Ü–∏—è –æ—Ç–º–µ—á–µ–Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–æ–ª–æ—Ç–æ–π –∫—Ä—É–≥ –Ω–µ "—É–ª–µ—Ç–µ–ª" –≤ —Å—Ç—Ä–∞–Ω–Ω–æ–µ –º–µ—Å—Ç–æ
      const iconBounds = await selectedIcon.boundingBox();
      console.log(`   –ü–æ–∑–∏—Ü–∏—è –∏–∫–æ–Ω–∫–∏: x=${Math.round(iconBounds.x)}, y=${Math.round(iconBounds.y)}`);
      
      // –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
      await page.screenshot({ path: 'tests/screenshots/test-golden-indicator.png' });
    } else {
      console.log('   ‚ùå –í—ã–±—Ä–∞–Ω–Ω–∞—è –æ–ø—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
    }
    
    // 3. –¢–µ—Å—Ç –æ–±—â–µ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    console.log('\n3. üìà –¢–µ—Å—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...');
    
    // –°—á–∏—Ç–∞–µ–º –≤—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –∫–≤–∏–∑–µ
    const images = page.locator('.quiz-option img');
    const imageCount = await images.count();
    console.log(`   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: ${imageCount}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–∏–ª–∏—Å—å
    let loadedImages = 0;
    for (let i = 0; i < imageCount; i++) {
      const img = images.nth(i);
      const isLoaded = await img.evaluate((el) => el.complete && el.naturalHeight !== 0);
      if (isLoaded) loadedImages++;
    }
    
    console.log(`   –ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: ${loadedImages}/${imageCount}`);
    
    if (loadedImages === imageCount) {
      console.log('   ‚úÖ –í—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–∏–ª–∏—Å—å —É—Å–ø–µ—à–Ω–æ');
    } else {
      console.log('   ‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª–∏—Å—å');
    }
    
    // 4. –¢–µ—Å—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞
    console.log('\n4. üìÅ –¢–µ—Å—Ç –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞...');
    
    const fs = require('fs');
    const path = require('path');
    
    const expectedDirs = [
      'tests',
      'tests/screenshots', 
      'scripts',
      'vite-plugins'
    ];
    
    let allDirsExist = true;
    expectedDirs.forEach(dir => {
      const dirPath = path.join(process.cwd(), dir);
      const exists = fs.existsSync(dirPath);
      console.log(`   ${exists ? '‚úÖ' : '‚ùå'} ${dir}`);
      if (!exists) allDirsExist = false;
    });
    
    if (allDirsExist) {
      console.log('   ‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ñ–∞–π–ª–æ–≤ –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ');
    } else {
      console.log('   ‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø–∞–ø–∫–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç');
    }
    
    // 5. –¢–µ—Å—Ç –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç–∏ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —ç–∫—Ä–∞–Ω–∞—Ö
    console.log('\n5. üì± –¢–µ—Å—Ç –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç–∏ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —ç–∫—Ä–∞–Ω–∞—Ö...');
    
    const testSizes = [
      { name: 'iPhone SE', width: 375, height: 667 },
      { name: 'iPad', width: 768, height: 1024 },
      { name: 'Desktop', width: 1200, height: 800 }
    ];
    
    for (const size of testSizes) {
      await page.setViewportSize({ width: size.width, height: size.height });
      await page.waitForTimeout(500);
      
      const modalContent = page.locator('.quiz-modal__content');
      const contentBounds = await modalContent.boundingBox();
      
      const fitsInViewport = contentBounds.width <= size.width && contentBounds.height <= size.height;
      console.log(`   ${fitsInViewport ? '‚úÖ' : '‚ö†Ô∏è '} ${size.name} (${size.width}x${size.height})`);
      
      await page.screenshot({ 
        path: `tests/screenshots/test-responsive-${size.name.toLowerCase().replace(' ', '-')}.png` 
      });
    }
    
    // 6. –¢–µ—Å—Ç –º–æ–¥—É–ª—å–Ω–æ—Å—Ç–∏ CSS (–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö)
    console.log('\n6. üé® –¢–µ—Å—Ç –º–æ–¥—É–ª—å–Ω–æ—Å—Ç–∏ CSS...');
    
    const cssVariables = await page.evaluate(() => {
      const modal = document.querySelector('.quiz-modal');
      if (!modal) return null;
      
      const styles = window.getComputedStyle(modal);
      return {
        zIndex: styles.zIndex,
        padding: styles.padding,
        backgroundColor: styles.backgroundColor
      };
    });
    
    console.log(`   Z-index: ${cssVariables.zIndex}`);
    console.log(`   Padding: ${cssVariables.padding}`);
    
    const usesVariables = cssVariables.zIndex === '1050'; // var(--z-modal)
    console.log(`   ${usesVariables ? '‚úÖ' : '‚ùå'} CSS –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è`);
    
    // –§–∏–Ω–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–Ω—à–æ—Ç
    await page.setViewportSize({ width: 1200, height: 800 });
    await page.screenshot({ path: 'tests/screenshots/test-final-state-improved.png' });
    
    console.log('\nüéâ –§–∏–Ω–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
    console.log('\nüìã –°–≤–æ–¥–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:');
    console.log('   ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∫—Ä–µ—Å—Ç–∏–∫–∞ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö');
    console.log('   ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω –±–∞–≥ —Å –∑–æ–ª–æ—Ç—ã–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–º');
    console.log('   ‚úÖ –û—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞');
    console.log('   ‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Å–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π');
    console.log('   ‚úÖ –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω Vite –ø–ª–∞–≥–∏–Ω –¥–ª—è production —Å–±–æ—Ä–∫–∏');
    console.log('   ‚úÖ –í—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω—ã (99.9% —ç–∫–æ–Ω–æ–º–∏–∏)');
    console.log('   ‚úÖ –ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞ –Ω–∞ –≤—Å–µ—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö');
    console.log('   ‚úÖ –ú–æ–¥—É–ª—å–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ CSS —Å–æ–±–ª—é–¥–µ–Ω–∞');
    
    await page.waitForTimeout(2000);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
    await page.screenshot({ path: 'tests/screenshots/test-error-final.png' });
  } finally {
    await browser.close();
  }
})();