import React, { useState, useEffect } from 'react';
import { Swiper, SwiperSlide } from 'swiper/react';
import { Navigation, Pagination, A11y } from 'swiper/modules';
import ReviewCard from '@/components/ReviewCard/ReviewCard.jsx';
import ReviewCardSkeleton from '@/components/ReviewCard/ReviewCardSkeleton.jsx';
import ReviewsEmptyState from '@/components/ReviewCard/ReviewsEmptyState.jsx';
import './ReviewsWidget.scss';
import 'swiper/css';
import 'swiper/css/navigation';
import 'swiper/css/pagination';

// SVG –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
const ArrowLeftIcon = ({ size = 20 }) => (
  <svg width={size} height={size} viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M6 12H18M6 12L11 7M6 12L11 17" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
  </svg>
);

const ArrowRightIcon = ({ size = 20 }) => (
  <svg width={size} height={size} viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M6 12H18M18 12L13 7M18 12L13 17" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
  </svg>
);

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
const REVIEWS_CONFIG = {
  ITEMS_PER_PAGE: 9, // 3x3 –Ω–∞ –¥–µ—Å–∫—Ç–æ–ø–µ
  CACHE: {
    KEY: 'funeral_reviews_cache',
    TIMESTAMP_KEY: 'funeral_reviews_cache_timestamp',
    DURATION: 30 * 60 * 1000, // 30 –º–∏–Ω—É—Ç
  },
  PAGINATION_THRESHOLDS: {
    SMALL: 25,
    MEDIUM: 15,
  },
  BREAKPOINTS: {
    TABLET: 768,
    DESKTOP: 1024,
  },
  AUTO_LOAD_THRESHOLD: 3, // –ó–∞–≥—Ä—É–∂–∞—Ç—å –∑–∞ 3 —Å–ª–∞–π–¥–∞ –¥–æ –∫–æ–Ω—Ü–∞
  CTA_LINK: 'https://yandex.ru/maps/org/vek/22307782205/reviews/?ll=41.376142%2C56.846580&z=10',
};

/**
 * –í–∏–¥–∂–µ—Ç –æ—Ç–∑—ã–≤–æ–≤ —Å –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–æ–π –∏ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º
 */
const ReviewsWidget = () => {
  const [reviews, setReviews] = useState([]);
  const [loading, setLoading] = useState(true);
  const [loadingMore, setLoadingMore] = useState(false);
  const [error, setError] = useState(null);
  const [hasMore, setHasMore] = useState(true);
  const [currentOffset, setCurrentOffset] = useState(0);

  // –ó–∞–≥—Ä—É–∑–∫–∞ –æ—Ç–∑—ã–≤–æ–≤ –ø–æ—Å–ª–µ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    loadReviews();
  }, []);

  // –≠—Ñ—Ñ–µ–∫—Ç –¥–ª—è –∞–¥–∞–ø—Ç–∞—Ü–∏–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –æ—Ç–∑—ã–≤–æ–≤
  useEffect(() => {
    const adaptPagination = () => {
      const paginationEl = document.querySelector('.reviews__slider .swiper-pagination');
      if (!paginationEl) return;

      const bullets = paginationEl.querySelectorAll('.swiper-pagination-bullet');
      const bulletCount = bullets.length;

      // –£–±–∏—Ä–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –∫–ª–∞—Å—Å—ã
      paginationEl.classList.remove('pagination-medium', 'pagination-small');

      if (bulletCount > REVIEWS_CONFIG.PAGINATION_THRESHOLDS.SMALL) {
        paginationEl.classList.add('pagination-small');
      } else if (bulletCount > REVIEWS_CONFIG.PAGINATION_THRESHOLDS.MEDIUM) {
        paginationEl.classList.add('pagination-medium');
      }
    };

    // –ê–¥–∞–ø—Ç–∏—Ä—É–µ–º –ø–∞–≥–∏–Ω–∞—Ü–∏—é —á–µ—Ä–µ–∑ –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É –ø–æ—Å–ª–µ —Ä–µ–Ω–¥–µ—Ä–∞
    const timeoutId = setTimeout(adaptPagination, 100);
    return () => clearTimeout(timeoutId);
  }, [reviews.length]);

  // –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–µ—à–∞
  const getCachedReviews = () => {
    try {
      const cachedData = localStorage.getItem(REVIEWS_CONFIG.CACHE.KEY);
      const cachedTimestamp = localStorage.getItem(REVIEWS_CONFIG.CACHE.TIMESTAMP_KEY);

      if (cachedData && cachedTimestamp) {
        const now = Date.now();
        const timestamp = parseInt(cachedTimestamp);

        if (now - timestamp < REVIEWS_CONFIG.CACHE.DURATION) {
          return JSON.parse(cachedData);
        }
      }
    } catch (error) {
      console.warn('–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –∫–µ—à–∞ –æ—Ç–∑—ã–≤–æ–≤:', error);
    }
    return null;
  };

  // –§—É–Ω–∫—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –∫–µ—à
  const setCachedReviews = (data) => {
    try {
      localStorage.setItem(REVIEWS_CONFIG.CACHE.KEY, JSON.stringify(data));
      localStorage.setItem(REVIEWS_CONFIG.CACHE.TIMESTAMP_KEY, Date.now().toString());
    } catch (error) {
      console.warn('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–µ—à–∞ –æ—Ç–∑—ã–≤–æ–≤:', error);
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç–∑—ã–≤–æ–≤
  const loadReviews = async () => {
    console.log('üîÑ –ù–∞—á–∏–Ω–∞–µ–º loadReviews');

    // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–µ—à
    const cachedReviews = getCachedReviews();
    if (cachedReviews && cachedReviews.length > 0) {
      console.log('üì¶ –ò—Å–ø–æ–ª—å–∑—É—é –∫–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ—Ç–∑—ã–≤—ã:', cachedReviews.length);

      // –ü—Ä–∏–º–µ–Ω—è–µ–º –¥–µ–¥—É–ø–ª–∏–∫–∞—Ü–∏—é –∏ –∫ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –¥–∞–Ω–Ω—ã–º
      const uniqueReviewsMap = new Map();
      cachedReviews.forEach(review => {
        if (review.id && !uniqueReviewsMap.has(review.id)) {
          uniqueReviewsMap.set(review.id, review);
        }
      });

      const uniqueCachedReviews = Array.from(uniqueReviewsMap.values());
      console.log(`üîç –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∫–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤: ${uniqueCachedReviews.length} –∏–∑ ${cachedReviews.length}`);

      setReviews(uniqueCachedReviews);
      setCurrentOffset(uniqueCachedReviews.length);

      // –ï—Å–ª–∏ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤ –º–µ–Ω—å—à–µ —á–µ–º ITEMS_PER_PAGE, –∑–Ω–∞—á–∏—Ç —ç—Ç–æ –≤—Å–µ —á—Ç–æ –µ—Å—Ç—å
      if (uniqueCachedReviews.length < REVIEWS_CONFIG.ITEMS_PER_PAGE) {
        setHasMore(false);
      } else {
        setHasMore(true);
      }

      setLoading(false);
      return;
    }

    console.log('üåê –ö–µ—à–∞ –Ω–µ—Ç, –∑–∞–≥—Ä—É–∂–∞—é —Å —Å–µ—Ä–≤–µ—Ä–∞');

    // –ï—Å–ª–∏ –∫–µ—à–∞ –Ω–µ—Ç, –∑–∞–≥—Ä—É–∂–∞–µ–º —Å –±—ç–∫–µ–Ω–¥–∞
    try {
      setLoading(true);
      setError(null);

      console.log('üì° –û—Ç–ø—Ä–∞–≤–ª—è—é –∑–∞–ø—Ä–æ—Å –∫ /api/reviews');
      const response = await fetch(`/api/reviews?offset=0&limit=${REVIEWS_CONFIG.ITEMS_PER_PAGE}`, {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json',
        },
      });

      console.log('üì® –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç:', response.status, response.statusText);

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      const data = await response.json();
      console.log('üìä –î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã:', data.length, '–æ—Ç–∑—ã–≤–æ–≤');

      // –°–æ–∑–¥–∞–µ–º Map –¥–ª—è —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏ –ø–æ ID
      const uniqueReviewsMap = new Map();

      data.forEach(review => {
        if (review.id && !uniqueReviewsMap.has(review.id)) {
          uniqueReviewsMap.set(review.id, review);
        }
      });

      // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –æ–±—Ä–∞—Ç–Ω–æ –≤ –º–∞—Å—Å–∏–≤ –∏ —Å–æ—Ä—Ç–∏—Ä—É–µ–º
      const uniqueReviews = Array.from(uniqueReviewsMap.values()).sort((a, b) => {
        const lengthDiff = (b.review_text?.length || 0) - (a.review_text?.length || 0);
        if (lengthDiff !== 0) return lengthDiff;
        return new Date(b.publish_date || 0) - new Date(a.publish_date || 0);
      });

      console.log('‚úÖ –û—Ç–∑—ã–≤—ã –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã –∏ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã');
      console.log(`üîç –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤: ${uniqueReviews.length} –∏–∑ ${data.length}`);

      setReviews(uniqueReviews);
      setCurrentOffset(uniqueReviews.length);

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –µ—â–µ –¥–∞–Ω–Ω—ã–µ
      if (data.length < REVIEWS_CONFIG.ITEMS_PER_PAGE) {
        setHasMore(false);
      }

      setCachedReviews(uniqueReviews);
    } catch (err) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç–∑—ã–≤–æ–≤:', err);
      setError(err.message);
    } finally {
      setLoading(false);
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
  const handleRetry = () => {
    loadReviews();
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ –æ—Ç–∑—ã–≤–æ–≤
  const removeDuplicateReviews = (existingReviews, newReviews) => {
    const existingIds = new Set(existingReviews.map(review => review.id).filter(Boolean));
    return newReviews.filter(review => review.id && !existingIds.has(review.id));
  };

  // –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤
  const loadMoreReviews = async () => {
    if (loadingMore || !hasMore) {
      console.log('‚ùå –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞:', { loadingMore, hasMore });
      return;
    }

    try {
      setLoadingMore(true);
      console.log(`üîÑ –ó–∞–≥—Ä—É–∂–∞—é –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ—Ç–∑—ã–≤—ã, offset: ${currentOffset}`);

      const response = await fetch(`/api/reviews?offset=${currentOffset}&limit=${REVIEWS_CONFIG.ITEMS_PER_PAGE}`, {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json',
        },
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      const newReviews = await response.json();
      console.log(`üìä –ü–æ–ª—É—á–µ–Ω–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤: ${newReviews.length}`);

      // –ï—Å–ª–∏ –ø–æ–ª—É—á–∏–ª–∏ –º–µ–Ω—å—à–µ —á–µ–º –∑–∞–ø—Ä–∞—à–∏–≤–∞–ª–∏ - —ç—Ç–æ –∫–æ–Ω–µ—Ü
      if (newReviews.length < REVIEWS_CONFIG.ITEMS_PER_PAGE) {
        setHasMore(false);
        console.log('‚úÖ –î–æ—Å—Ç–∏–≥–Ω—É—Ç –∫–æ–Ω–µ—Ü —Å–ø–∏—Å–∫–∞ –æ—Ç–∑—ã–≤–æ–≤');
      }

      if (newReviews.length > 0) {
        // –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã
        const filteredNewReviews = removeDuplicateReviews(reviews, newReviews);
        console.log(`üîç –ü–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –¥—É–±–ª–∏–∫–∞—Ç–æ–≤: ${filteredNewReviews.length} –∏–∑ ${newReviews.length} –æ—Ç–∑—ã–≤–æ–≤`);

        if (filteredNewReviews.length > 0) {
          // –°–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–æ–≤—ã–µ –æ—Ç–∑—ã–≤—ã
          const sortedNewReviews = filteredNewReviews.sort((a, b) => {
            const lengthDiff = (b.review_text?.length || 0) - (a.review_text?.length || 0);
            if (lengthDiff !== 0) return lengthDiff;
            return new Date(b.publish_date || 0) - new Date(a.publish_date || 0);
          });

          setReviews(prev => {
            const allReviews = [...prev, ...sortedNewReviews];
            setCachedReviews(allReviews);
            return allReviews;
          });

          setCurrentOffset(prev => prev + newReviews.length);
        } else {
          // –ï—Å–ª–∏ –≤—Å–µ –æ—Ç–∑—ã–≤—ã –æ–∫–∞–∑–∞–ª–∏—Å—å –¥—É–±–ª–∏–∫–∞—Ç–∞–º–∏, —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º offset
          setCurrentOffset(prev => prev + newReviews.length);

          // –ï—Å–ª–∏ –º—ã –ø–æ–ª—É—á–∏–ª–∏ –ø–æ–ª–Ω—É—é –ø–æ—Ä—Ü–∏—é –¥—É–±–ª–∏–∫–∞—Ç–æ–≤, –ø—Ä–æ–±—É–µ–º –µ—â–µ —Ä–∞–∑
          if (newReviews.length === REVIEWS_CONFIG.ITEMS_PER_PAGE && hasMore) {
            console.log('üîÑ –í—Å–µ –æ—Ç–∑—ã–≤—ã –±—ã–ª–∏ –¥—É–±–ª–∏–∫–∞—Ç–∞–º–∏, –ø—Ä–æ–±—É—é –∑–∞–≥—Ä—É–∑–∏—Ç—å –µ—â–µ');
            setTimeout(() => loadMoreReviews(), 100);
            return;
          }
        }
      } else {
        // –ï—Å–ª–∏ –æ—Ç–∑—ã–≤–æ–≤ –≤–æ–æ–±—â–µ –Ω–µ—Ç - –∫–æ–Ω–µ—Ü
        setHasMore(false);
        console.log('‚úÖ –û—Ç–∑—ã–≤–æ–≤ –±–æ–ª—å—à–µ –Ω–µ—Ç');
      }
    } catch (err) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤:', err);
      setHasMore(false); // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –ø—Ä–∏ –æ—à–∏–±–∫–µ
    } finally {
      setLoadingMore(false);
    }
  };

  // –†–µ–Ω–¥–µ—Ä —Å–æ—Å—Ç–æ—è–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
  const renderLoading = () => (
    <div className="reviews__slider">
      <Swiper
        modules={[Navigation, Pagination, A11y]}
        spaceBetween={24}
        slidesPerView={1}
        navigation={{
          prevEl: '.reviews__slider .swiper-button-prev',
          nextEl: '.reviews__slider .swiper-button-next',
        }}
        pagination={{ clickable: true }}
        breakpoints={{
          [REVIEWS_CONFIG.BREAKPOINTS.TABLET]: { slidesPerView: 2 },
          [REVIEWS_CONFIG.BREAKPOINTS.DESKTOP]: { slidesPerView: 3 },
        }}
        a11y={{
          prevSlideMessage: "–ü—Ä–µ–¥—ã–¥—É—â–∏–µ –æ—Ç–∑—ã–≤—ã",
          nextSlideMessage: "–°–ª–µ–¥—É—é—â–∏–µ –æ—Ç–∑—ã–≤—ã",
        }}
      >
        {[1, 2, 3].map((index) => (
          <SwiperSlide key={index}>
            <ReviewCardSkeleton />
          </SwiperSlide>
        ))}
      </Swiper>

      {/* –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ */}
      <div className="swiper-button-prev" style={{ opacity: 0.5, pointerEvents: 'none' }}>
        <ArrowLeftIcon />
      </div>
      <div className="swiper-button-next" style={{ opacity: 0.5, pointerEvents: 'none' }}>
        <ArrowRightIcon />
      </div>
    </div>
  );

  // –†–µ–Ω–¥–µ—Ä –æ—à–∏–±–∫–∏
  const renderError = () => (
    <ReviewsEmptyState
      type="error"
      message={error}
      onRetry={handleRetry}
    />
  );

  // –†–µ–Ω–¥–µ—Ä –ø—É—Å—Ç–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
  const renderEmpty = () => (
    <ReviewsEmptyState type="empty" />
  );

  // –†–µ–Ω–¥–µ—Ä –æ—Ç–∑—ã–≤–æ–≤
  const renderReviews = () => (
    <div className="reviews__slider">
      <Swiper
        modules={[Navigation, Pagination, A11y]}
        spaceBetween={24}
        slidesPerView={1}
        navigation={{
          prevEl: '.reviews__slider .swiper-button-prev',
          nextEl: '.reviews__slider .swiper-button-next',
        }}
        pagination={{ clickable: true }}
        breakpoints={{
          [REVIEWS_CONFIG.BREAKPOINTS.TABLET]: { slidesPerView: 2 },
          [REVIEWS_CONFIG.BREAKPOINTS.DESKTOP]: { slidesPerView: Math.min(reviews.length, 3) },
        }}
        a11y={{
          prevSlideMessage: "–ü—Ä–µ–¥—ã–¥—É—â–∏–µ –æ—Ç–∑—ã–≤—ã",
          nextSlideMessage: "–°–ª–µ–¥—É—é—â–∏–µ –æ—Ç–∑—ã–≤—ã",
        }}
        onSlideChange={(swiper) => {
          // –ê–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–ª–∞–π–¥–æ–≤
          if (hasMore && !loadingMore) {
            const totalSlides = swiper.slides?.length || 0;
            const threshold = Math.max(1, totalSlides - REVIEWS_CONFIG.AUTO_LOAD_THRESHOLD);

            if (swiper.activeIndex >= threshold) {
              console.log('üîÑ –ê–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∞ –Ω–∞ —Å–ª–∞–π–¥–µ:', swiper.activeIndex, 'threshold:', threshold);
              loadMoreReviews();
            }
          }
        }}
      >
        {reviews.map((review, index) => (
          <SwiperSlide key={review.id ? `review-${review.id}` : `review-fallback-${index}`}>
            <ReviewCard
              author={review.author_name}
              rating={review.rating}
              text={review.review_text}
              date={review.publish_date}
              source={review.source}
              source_url={review.source_url}
              avatar_url={review.author_avatar_url}
            />
          </SwiperSlide>
        ))}

        {/* –°–ª–∞–π–¥ —Å –∫–Ω–æ–ø–∫–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤ */}
        {hasMore && (
          <SwiperSlide key={`load-more-${reviews.length}`}>
            <div className="reviews__load-more-card">
              <div className="reviews__load-more-content">
                <h3 className="reviews__load-more-title">–ï—â–µ –æ—Ç–∑—ã–≤—ã</h3>
                <p className="reviews__load-more-text">
                  –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –±–æ–ª—å—à–µ –æ—Ç–∑—ã–≤–æ–≤ –Ω–∞—à–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤
                </p>
                <button
                  className="reviews__load-more-btn btn btn--accent btn--md"
                  onClick={loadMoreReviews}
                  disabled={loadingMore}
                  aria-label="–ó–∞–≥—Ä—É–∑–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ—Ç–∑—ã–≤—ã"
                >
                  {loadingMore ? '–ó–∞–≥—Ä—É–∂–∞–µ–º...' : '–ó–∞–≥—Ä—É–∑–∏—Ç—å –µ—â–µ'}
                </button>
              </div>
            </div>
          </SwiperSlide>
        )}
      </Swiper>

      {/* –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –≤–Ω—É—Ç—Ä–∏ slider */}
      <div className="swiper-button-prev">
        <ArrowLeftIcon />
      </div>
      <div className="swiper-button-next">
        <ArrowRightIcon />
      </div>
    </div>
  );

  return (
    <section
      className="reviews section"
      aria-labelledby="reviews-title"
      role="region"
    >
      <div className="container">
        <header className="reviews__header">
          <h2 id="reviews-title" className="reviews__title">–ß—Ç–æ –æ –Ω–∞—Å –≥–æ–≤–æ—Ä—è—Ç</h2>
          <p className="reviews__subtitle">
            –†–µ–∞–ª—å–Ω—ã–µ –æ—Ç–∑—ã–≤—ã –Ω–∞—à–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ —Å –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç –∏ Google –ö–∞—Ä—Ç
          </p>
        </header>

        <div className="reviews__content" aria-live="polite">
          {loading && renderLoading()}
          {!loading && error && renderError()}
          {!loading && !error && reviews.length === 0 && renderEmpty()}
          {!loading && !error && reviews.length > 0 && renderReviews()}
        </div>

        <aside className="reviews__cta" role="complementary" aria-label="–ü—Ä–∏–∑—ã–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é">
          <p className="reviews__cta-text">
            –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º –æ–ø—ã—Ç–æ–º —Ä–∞–±–æ—Ç—ã —Å –Ω–∞–º–∏
          </p>
          <a
            href={REVIEWS_CONFIG.CTA_LINK}
            target="_blank"
            rel="noopener noreferrer"
            className="reviews__cta-link btn btn--secondary btn--sm"
            aria-label="–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ –≤ –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç–∞—Ö (–æ—Ç–∫—Ä–æ–µ—Ç—Å—è –≤ –Ω–æ–≤–æ–π –≤–∫–ª–∞–¥–∫–µ)"
          >
            –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ –≤ –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç–∞—Ö
          </a>
        </aside>
      </div>
    </section>
  );
};

export default ReviewsWidget;