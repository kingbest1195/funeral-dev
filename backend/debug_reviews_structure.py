#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ HTML —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –æ—Ç–∑—ã–≤–æ–≤ Google Maps.
"""
import sys
import os
import time

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π
sys.path.insert(0, os.path.dirname(__file__))

from utils.selenium_utils import setup_chrome_driver
from selenium.webdriver.common.by import By

def debug_reviews_structure():
    """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å –æ—Ç–∑—ã–≤–∞–º–∏."""
    print("üî¨ –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –æ—Ç–∑—ã–≤–æ–≤ Google Maps...")
    print("=" * 60)

    url = "https://www.google.com/maps/place/%D0%92%D0%B5%D0%BA+%D0%A0%D0%B8%D1%82%D1%83%D0%B0%D0%BB%D1%8C%D0%BD%D0%B0%D1%8F+%D0%A1%D0%BB%D1%83%D0%B6%D0%B1%D0%B0/@56.8466536,41.3764817,15z/data=!4m6!3m5!1s0x414d0b2fc37086e3:0xf1cf44b4331d81d0!8m2!3d56.8466536!4d41.3764817!16s%2Fg%2F11gv_r_kkm?hl=ru"

    driver = setup_chrome_driver(headless=False)

    try:
        print(f"üìç –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ URL: {url}")
        driver.get(url)
        time.sleep(5)

        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–≥–ª–∞—Å–∏–µ
        try:
            consent_button = driver.find_element(By.CSS_SELECTOR, 'button[aria-label="–ü—Ä–∏–Ω—è—Ç—å –≤—Å–µ"]')
            consent_button.click()
            print("‚úÖ –°–æ–≥–ª–∞—Å–∏–µ –ø—Ä–∏–Ω—è—Ç–æ")
            time.sleep(15)
        except:
            print("‚ÑπÔ∏è  –î–∏–∞–ª–æ–≥ —Å–æ–≥–ª–∞—Å–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω")

        # –ò—â–µ–º –∏ –∫–ª–∏–∫–∞–µ–º –Ω–∞ –≤–∫–ª–∞–¥–∫—É –æ—Ç–∑—ã–≤–æ–≤
        try:
            tabs = driver.find_elements(By.CSS_SELECTOR, 'button[role="tab"]')
            for tab in tabs:
                aria_label = tab.get_attribute('aria-label')
                if aria_label and '–æ—Ç–∑—ã–≤' in aria_label.lower():
                    print(f"‚úÖ –ù–∞–π–¥–µ–Ω–∞ –≤–∫–ª–∞–¥–∫–∞ –æ—Ç–∑—ã–≤–æ–≤: {aria_label}")
                    tab.click()
                    time.sleep(10)
                    break
        except:
            print("‚ùå –í–∫–ª–∞–¥–∫–∞ –æ—Ç–∑—ã–≤–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")

        print("\nüîç –ê–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Å—Ç—Ä–∞–Ω–∏—Ü—ã:")

        # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ div —ç–ª–µ–º–µ–Ω—Ç—ã –∏ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∏—Ö –∫–ª–∞—Å—Å—ã
        all_divs = driver.find_elements(By.TAG_NAME, "div")
        print(f"  –í—Å–µ–≥–æ div —ç–ª–µ–º–µ–Ω—Ç–æ–≤: {len(all_divs)}")

        # –ò—â–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã —Å –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–º–∏ –∫–ª–∞—Å—Å–∞–º–∏
        interesting_patterns = ['review', 'jftiEf', 'fontBody', 'MyEned', 'wiI7pd']

        for pattern in interesting_patterns:
            elements = driver.find_elements(By.CSS_SELECTOR, f"*[class*='{pattern}']")
            print(f"  –≠–ª–µ–º–µ–Ω—Ç—ã —Å '{pattern}' –≤ –∫–ª–∞—Å—Å–µ: {len(elements)}")

            if elements and len(elements) < 20:
                for i, elem in enumerate(elements[:5], 1):
                    try:
                        classes = elem.get_attribute('class')
                        text = elem.text.strip()[:100]
                        print(f"    #{i}: class='{classes}' text='{text}'")
                    except:
                        continue

        # –ò—â–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã —Å data –∞—Ç—Ä–∏–±—É—Ç–∞–º–∏
        data_elements = driver.find_elements(By.CSS_SELECTOR, "[data-review-id]")
        print(f"\n  –≠–ª–µ–º–µ–Ω—Ç—ã —Å data-review-id: {len(data_elements)}")

        # –ò—â–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã —Å aria-label —Å–æ–¥–µ—Ä–∂–∞—â–∏–º –∏–º–µ–Ω–∞
        aria_elements = driver.find_elements(By.CSS_SELECTOR, "*[aria-label]")
        print(f"  –≠–ª–µ–º–µ–Ω—Ç—ã —Å aria-label: {len(aria_elements)}")

        name_elements = []
        for elem in aria_elements:
            try:
                aria_label = elem.get_attribute('aria-label')
                if aria_label and len(aria_label) > 10 and len(aria_label) < 100:
                    # –í–æ–∑–º–æ–∂–Ω–æ —ç—Ç–æ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if any(char.isalpha() for char in aria_label):
                        name_elements.append((elem, aria_label))
            except:
                continue

        print(f"  –í–æ–∑–º–æ–∂–Ω—ã–µ –∏–º–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(name_elements)}")
        for elem, aria_label in name_elements[:10]:
            print(f"    aria-label: '{aria_label}'")

        # –°–∫—Ä–æ–ª–ª –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç–∑—ã–≤–æ–≤
        print(f"\nüìú –°–∫—Ä–æ–ª–ª–∏–Ω–≥ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç–∑—ã–≤–æ–≤...")
        for i in range(3):
            driver.execute_script("window.scrollTo(0, document.body.scrollHeight);")
            time.sleep(2)
            print(f"  –°–∫—Ä–æ–ª–ª #{i+1}")

        # –ü–æ–≤—Ç–æ—Ä–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –ø–æ—Å–ª–µ —Å–∫—Ä–æ–ª–ª–∏–Ω–≥–∞
        print(f"\nüîç –ü–æ–≤—Ç–æ—Ä–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –ø–æ—Å–ª–µ —Å–∫—Ä–æ–ª–ª–∏–Ω–≥–∞:")
        for pattern in interesting_patterns:
            elements = driver.find_elements(By.CSS_SELECTOR, f"*[class*='{pattern}']")
            print(f"  –≠–ª–µ–º–µ–Ω—Ç—ã —Å '{pattern}' –≤ –∫–ª–∞—Å—Å–µ: {len(elements)}")

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º HTML –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
        page_html = driver.page_source
        with open('google_maps_debug.html', 'w', encoding='utf-8') as f:
            f.write(page_html)
        print(f"\nüíæ HTML —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ google_maps_debug.html")

        # –ñ–¥–µ–º –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ –æ—Å–º–æ—Ç—Ä–∞
        print(f"\n‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ 60 —Å–µ–∫—É–Ω–¥ –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ –æ—Å–º–æ—Ç—Ä–∞...")
        time.sleep(60)

    finally:
        driver.quit()
        print("\n‚úÖ –ë—Ä–∞—É–∑–µ—Ä –∑–∞–∫—Ä—ã—Ç")

if __name__ == "__main__":
    debug_reviews_structure()