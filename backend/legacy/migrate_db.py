"""
–°–∫—Ä–∏–ø—Ç –º–∏–≥—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª–µ–π source_name –∏ source_url.
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ç–∞–±–ª–∏—Ü –±–µ–∑ –ø–æ—Ç–µ—Ä–∏ –¥–∞–Ω–Ω—ã—Ö.
"""
import os
from sqlalchemy import create_engine, text, inspect
from dotenv import load_dotenv

def migrate_database():
    """–ú–∏–≥—Ä–∏—Ä—É–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, –¥–æ–±–∞–≤–ª—è—è –Ω–æ–≤—ã–µ –ø–æ–ª—è –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç."""

    load_dotenv()
    db_name = os.getenv("DATABASE_NAME", "reviews.db")
    database_url = f"sqlite:///{db_name}"

    engine = create_engine(database_url)

    print(f"üîÑ –ù–∞—á–∏–Ω–∞—é –º–∏–≥—Ä–∞—Ü–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {db_name}")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–∞–±–ª–∏—Ü–∞
    inspector = inspect(engine)
    if 'reviews' not in inspector.get_table_names():
        print("üìã –¢–∞–±–ª–∏—Ü–∞ 'reviews' –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é...")
        from database import init_db
        init_db()
        print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ —Å–æ–∑–¥–∞–Ω–∞ —Å –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π")
        return

    # –ü–æ–ª—É—á–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–ª–æ–Ω–∫–∏
    columns = [col['name'] for col in inspector.get_columns('reviews')]
    print(f"üìä –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–ª–æ–Ω–∫–∏: {columns}")

    with engine.begin() as conn:
        # –î–æ–±–∞–≤–ª—è–µ–º source_name –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
        if 'source_name' not in columns:
            print("‚ûï –î–æ–±–∞–≤–ª—è—é –∫–æ–ª–æ–Ω–∫—É 'source_name'...")
            conn.execute(text("ALTER TABLE reviews ADD COLUMN source_name VARCHAR(50)"))

            # –ó–∞–ø–æ–ª–Ω—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–ø–∏—Å–∏
            conn.execute(text("""
                UPDATE reviews
                SET source_name = CASE
                    WHEN source = 'yandex' THEN '–Ø–Ω–¥–µ–∫—Å.–ë–∏–∑–Ω–µ—Å'
                    WHEN source = 'google' THEN 'Google Maps'
                    ELSE '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'
                END
            """))
            print("‚úÖ –ö–æ–ª–æ–Ω–∫–∞ 'source_name' –¥–æ–±–∞–≤–ª–µ–Ω–∞ –∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞")
        else:
            print("‚ÑπÔ∏è –ö–æ–ª–æ–Ω–∫–∞ 'source_name' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")

        # –î–æ–±–∞–≤–ª—è–µ–º source_url –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
        if 'source_url' not in columns:
            print("‚ûï –î–æ–±–∞–≤–ª—è—é –∫–æ–ª–æ–Ω–∫—É 'source_url'...")
            conn.execute(text("ALTER TABLE reviews ADD COLUMN source_url TEXT"))

            # –ó–∞–ø–æ–ª–Ω—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–ø–∏—Å–∏ –∑–Ω–∞—á–µ–Ω–∏–µ–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            conn.execute(text("""
                UPDATE reviews
                SET source_url = CASE
                    WHEN source = 'yandex' THEN 'https://yandex.ru/maps/org/vek/'
                    WHEN source = 'google' THEN 'https://maps.google.com/'
                    ELSE 'https://example.com'
                END
            """))
            print("‚úÖ –ö–æ–ª–æ–Ω–∫–∞ 'source_url' –¥–æ–±–∞–≤–ª–µ–Ω–∞ –∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞")
        else:
            print("‚ÑπÔ∏è –ö–æ–ª–æ–Ω–∫–∞ 'source_url' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")

    # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫–∏ —á—Ç–æ–±—ã –æ–Ω–∏ —Å—Ç–∞–ª–∏ NOT NULL (—Ç–æ–ª—å–∫–æ –¥–ª—è –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö)
    with engine.begin() as conn:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –æ–±–Ω–æ–≤–∏—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è
        print("üîß –ü—Ä–∏–º–µ–Ω—è—é –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è NOT NULL...")

        # SQLite –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –Ω–∞–ø—Ä—è–º—É—é,
        # –Ω–æ –Ω–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —É–∂–µ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã, —Ç–∞–∫ —á—Ç–æ –Ω–æ–≤—ã–µ –∑–∞–ø–∏—Å–∏ –±—É–¥—É—Ç –≤–∞–ª–∏–¥–Ω—ã–º–∏

    print("üéâ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Ç–æ–≥–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
    print("\nüìã –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã:")
    inspector = inspect(engine)
    for col in inspector.get_columns('reviews'):
        print(f"  - {col['name']}: {col['type']} {'(NOT NULL)' if not col['nullable'] else '(NULL)'}")

if __name__ == "__main__":
    migrate_database()