#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —è–∑—ã–∫–∞ Google Maps.
"""
import sys
import os
import time

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–æ–≤
sys.path.insert(0, os.path.dirname(__file__))

from utils.selenium_utils import setup_chrome_driver
from selenium.webdriver.common.by import By

def test_language():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–∞–∫–æ–π —è–∑—ã–∫ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è –Ω–∞ —Å–∞–π—Ç–µ."""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —è–∑—ã–∫–∞ Google Maps...")
    print("=" * 60)

    url = "https://www.google.com/maps/place/Vek+Ritual%27naya+Sluzhba/@56.8576325,41.4019962,13z/data=!4m6!3m5!1s0x414d0b2fc37086e3:0xf1cf44b4331d81d0!8m2!3d56.8466536!4d41.3764817!16s%2Fg%2F11gv_r_kkm?hl=ru&amp;entry=ttu&amp;g_ep=EgoyMDI1MDkxMC4wIKXMDSoASAFQAw%3D%3D"

    driver = setup_chrome_driver(headless=False)  # –û—Ç–∫—Ä—ã–≤–∞–µ–º –≤–∏–¥–∏–º—ã–π –±—Ä–∞—É–∑–µ—Ä

    try:
        print(f"üìç –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ URL: {url}")
        driver.get(url)

        # –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        time.sleep(10)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ H1
        try:
            h1_elements = driver.find_elements(By.TAG_NAME, "h1")
            print(f"\nüîç –ù–∞–π–¥–µ–Ω–æ H1 —ç–ª–µ–º–µ–Ω—Ç–æ–≤: {len(h1_elements)}")

            for i, h1 in enumerate(h1_elements, 1):
                text = h1.text.strip()
                if text:
                    print(f"  H1 #{i}: '{text}'")

                    if "–í–µ–∫ –†–∏—Ç—É–∞–ª—å–Ω–∞—è –°–ª—É–∂–±–∞" in text:
                        print("  ‚úÖ –ù–∞–π–¥–µ–Ω —Ä—É—Å—Å–∫–∏–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ - —è–∑—ã–∫ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π!")
                    elif "Vek" in text and "Ritual" in text:
                        print("  ‚ùå –ù–∞–π–¥–µ–Ω –∞–Ω–≥–ª–∏–π—Å–∫–∏–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ - –Ω—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–ª—è—Ç—å —è–∑—ã–∫!")

                    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º HTML —Å—Ç—Ä—É–∫—Ç—É—Ä—É
                    print(f"  HTML: {h1.get_attribute('outerHTML')[:200]}...")

        except Exception as e:
            print(f"‚ö†Ô∏è  –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ H1: {e}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π URL –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è —è–∑—ã–∫–∞
        current_url = driver.current_url
        print(f"\nüåê –¢–µ–∫—É—â–∏–π URL: {current_url}")

        if "hl=ru" in current_url:
            print("  ‚úÖ –ü–∞—Ä–∞–º–µ—Ç—Ä hl=ru –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ URL")
        else:
            print("  ‚ùå –ü–∞—Ä–∞–º–µ—Ç—Ä hl=ru –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ URL")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–Ω–æ–ø–∫–∏ —Å–æ–≥–ª–∞—Å–∏—è
        try:
            consent_buttons = driver.find_elements(By.CSS_SELECTOR, "button")
            print(f"\nüîç –ù–∞–π–¥–µ–Ω–æ –∫–Ω–æ–ø–æ–∫: {len(consent_buttons)}")

            for button in consent_buttons[:10]:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤—ã–µ 10 –∫–Ω–æ–ø–æ–∫
                try:
                    text = button.text.strip()
                    aria_label = button.get_attribute('aria-label')

                    if text and ('–ø—Ä–∏–Ω—è—Ç—å' in text.lower() or 'accept' in text.lower() or
                                '—Å–æ–≥–ª–∞—Å–∏–µ' in text.lower() or 'consent' in text.lower()):
                        print(f"  –ö–Ω–æ–ø–∫–∞ —Å–æ–≥–ª–∞—Å–∏—è: '{text}' (aria-label: '{aria_label}')")

                        if '–ø—Ä–∏–Ω—è—Ç—å' in text.lower() or '—Å–æ–≥–ª–∞—Å–∏–µ' in text.lower():
                            print("    ‚úÖ –†—É—Å—Å–∫–∞—è –∫–Ω–æ–ø–∫–∞ –Ω–∞–π–¥–µ–Ω–∞!")
                        else:
                            print("    ‚ùå –ê–Ω–≥–ª–∏–π—Å–∫–∞—è –∫–Ω–æ–ø–∫–∞ - –Ω—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–ª—è—Ç—å —è–∑—ã–∫!")
                except:
                    continue

        except Exception as e:
            print(f"‚ö†Ô∏è  –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∫–Ω–æ–ø–æ–∫: {e}")

        # –ñ–¥–µ–º, —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
        print(f"\n‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ 30 —Å–µ–∫—É–Ω–¥ –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ –æ—Å–º–æ—Ç—Ä–∞...")
        time.sleep(30)

    finally:
        driver.quit()
        print("\n‚úÖ –ë—Ä–∞—É–∑–µ—Ä –∑–∞–∫—Ä—ã—Ç")

if __name__ == "__main__":
    test_language()