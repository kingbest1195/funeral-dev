"""
–£—Ç–∏–ª–∏—Ç—ã –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –ø–∞—Ä—Å–µ—Ä–æ–≤.
–û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –µ–¥–∏–Ω–æ–æ–±—Ä–∞–∑–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –∏–∑–±—ã—Ç–æ—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.
"""


class ParserLogger:
    """–ö–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º –ø–∞—Ä—Å–µ—Ä–æ–≤."""

    def __init__(self, verbose: bool = True):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ª–æ–≥–≥–µ—Ä–∞.

        Args:
            verbose: –í–∫–ª—é—á–∏—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
        """
        self.verbose = verbose

    def info(self, message: str):
        """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ."""
        if self.verbose:
            print(f"‚ÑπÔ∏è  {message}")

    def success(self, message: str):
        """–°–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ."""
        print(f"‚úÖ {message}")

    def warning(self, message: str):
        """–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ."""
        print(f"‚ö†Ô∏è  {message}")

    def error(self, message: str):
        """–û—à–∏–±–∫–∞."""
        print(f"‚ùå {message}")

    def debug(self, message: str):
        """–û—Ç–ª–∞–¥–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (—Ç–æ–ª—å–∫–æ –≤ verbose —Ä–µ–∂–∏–º–µ)."""
        if self.verbose:
            print(f"üîç {message}")

    def processing(self, message: str):
        """–°–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ—Ü–µ—Å—Å–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏."""
        if self.verbose:
            print(f"  üìù {message}")


# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –ª–æ–≥–≥–µ—Ä–∞
logger = ParserLogger(verbose=False)  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –∫—Ä–∞—Ç–∫–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ


def set_verbose_logging(verbose: bool = True):
    """–í–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ."""
    global logger
    logger.verbose = verbose