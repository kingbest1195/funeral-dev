"""
–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö mock-–¥–∞–Ω–Ω—ã–º–∏ –æ—Ç–∑—ã–≤–æ–≤.
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã.
"""
import os
import json
from datetime import datetime, timedelta
import random
from dotenv import load_dotenv
from database import Review, get_session, init_db

def fill_database_with_mock_data():
    """–ó–∞–ø–æ–ª–Ω—è–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö mock-–¥–∞–Ω–Ω—ã–º–∏ –æ—Ç–∑—ã–≤–æ–≤."""

    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ URL –∏–∑ .env
    load_dotenv()
    yandex_urls = os.getenv("YANDEX_URLS", "").split(',')
    yandex_urls = [url.strip() for url in yandex_urls if url.strip()]

    if not yandex_urls:
        yandex_urls = [
            "https://yandex.ru/maps/org/vek_funeral_hall/example1",
            "https://yandex.ru/maps/org/vek/example2"
        ]

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    init_db()
    session = get_session()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –æ—Ç–∑—ã–≤—ã
    existing_count = session.query(Review).count()
    if existing_count > 0:
        print(f"üìä –í –±–∞–∑–µ —É–∂–µ –µ—Å—Ç—å {existing_count} –æ—Ç–∑—ã–≤–æ–≤")
        response = input("–û—á–∏—Å—Ç–∏—Ç—å –±–∞–∑—É –∏ –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ? (y/n): ")
        if response.lower() == 'y':
            session.query(Review).delete()
            session.commit()
            print("üóëÔ∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ—á–∏—â–µ–Ω–∞")
        else:
            print("‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞")
            session.close()
            return

    # Mock-–¥–∞–Ω–Ω—ã–µ –æ—Ç–∑—ã–≤–æ–≤
    mock_reviews_data = [
        {
            'author': '–ê–Ω–Ω–∞ –ü–µ—Ç—Ä–æ–≤–Ω–∞',
            'text': '–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—É—é –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é –ø–æ—Ö–æ—Ä–æ–Ω –º–æ–µ–π –º–∞–º—ã. –í—Å–µ –±—ã–ª–æ —Å–¥–µ–ª–∞–Ω–æ —Å –¥–æ—Å—Ç–æ–∏–Ω—Å—Ç–≤–æ–º –∏ –≤–Ω–∏–º–∞–Ω–∏–µ–º –∫ –¥–µ—Ç–∞–ª—è–º. –û—Å–æ–±–µ–Ω–Ω–æ —Ö–æ—á—É –æ—Ç–º–µ—Ç–∏—Ç—å –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª–∞ –≤ —Ç–∞–∫–æ–π —Å–ª–æ–∂–Ω—ã–π –¥–ª—è –Ω–∞—Å –ø–µ—Ä–∏–æ–¥.',
            'days_ago': 5,
            'rating': 5.0
        },
        {
            'author': '–°–µ—Ä–≥–µ–π –ú.',
            'text': '–û—Ç–ª–∏—á–Ω–∞—è —Å–ª—É–∂–±–∞. –ü–æ–º–æ–≥–ª–∏ –≤–æ –≤—Å–µ–º, –≤–∑—è–ª–∏ –Ω–∞ —Å–µ–±—è –≤—Å–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–æ–Ω–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã. –¶–µ–Ω—ã —Ä–∞–∑—É–º–Ω—ã–µ, –æ—Ç–Ω–æ—à–µ–Ω–∏–µ —á–µ–ª–æ–≤–µ—á–Ω–æ–µ.',
            'days_ago': 12,
            'rating': 5.0
        },
        {
            'author': '–ú–∞—Ä–∏–Ω–∞ –í–∞—Å–∏–ª—å–µ–≤–Ω–∞',
            'text': '–°–ø–∞—Å–∏–±–æ –±–æ–ª—å—à–æ–µ –∑–∞ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —É—Å–ª—É–≥–∏. –í —Ç—Ä—É–¥–Ω—É—é –º–∏–Ω—É—Ç—É –ø–æ–ª—É—á–∏–ª–∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—É—é –ø–æ–º–æ—â—å –∏ –ø–æ–¥–¥–µ—Ä–∂–∫—É.',
            'days_ago': 8,
            'rating': 5.0
        },
        {
            'author': '–î–º–∏—Ç—Ä–∏–π',
            'text': '–ë—ã—Å—Ç—Ä–æ, –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ, –Ω–µ–¥–æ—Ä–æ–≥–æ. –†–µ–∫–æ–º–µ–Ω–¥—É—é –≤—Å–µ–º, –∫—Ç–æ —Å—Ç–æ–ª–∫–Ω—É–ª—Å—è —Å –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å—é –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –ø–æ—Ö–æ—Ä–æ–Ω. –ü–µ—Ä—Å–æ–Ω–∞–ª –æ—á–µ–Ω—å –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã–π –∏ —Ç–∞–∫—Ç–∏—á–Ω—ã–π.',
            'days_ago': 3,
            'rating': 5.0
        },
        {
            'author': '–ï–ª–µ–Ω–∞ –ö.',
            'text': '–û—á–µ–Ω—å –¥–æ–≤–æ–ª—å–Ω—ã —Ä–∞–±–æ—Ç–æ–π. –í—Å–µ —Å–¥–µ–ª–∞–ª–∏ –±—ã—Å—Ç—Ä–æ –∏ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ. –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–º–æ—â—å –≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏.',
            'days_ago': 15,
            'rating': 4.0
        },
        {
            'author': '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ù–∏–∫–æ–ª–∞–µ–≤–∏—á',
            'text': '–û–±—Ä–∞—â–∞–ª–∏—Å—å –¥–ª—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –ø–æ—Ö–æ—Ä–æ–Ω –æ—Ç—Ü–∞. –í—Å–µ –ø—Ä–æ—à–ª–æ –Ω–∞ –≤—ã—Å—à–µ–º —É—Ä–æ–≤–Ω–µ. –ë–æ–ª—å—à–æ–µ —Å–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–∏–∑–º –∏ —á–µ–ª–æ–≤–µ—á–Ω–æ—Å—Ç—å –≤ —Ç–∞–∫–æ–π —Ç—è–∂–µ–ª—ã–π –ø–µ—Ä–∏–æ–¥. –û—Ç–¥–µ–ª—å–Ω–æ–µ —Å–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–º–æ—â—å —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏.',
            'days_ago': 22,
            'rating': 5.0
        },
        {
            'author': '–ò—Ä–∏–Ω–∞',
            'text': '–•–æ—Ä–æ—à–∞—è —Å–ª—É–∂–±–∞, —Ä–∞–∑—É–º–Ω—ã–µ —Ü–µ–Ω—ã. –ü–æ–º–æ–≥–ª–∏ —Å –≤—ã–±–æ—Ä–æ–º –≥—Ä–æ–±–∞ –∏ –≤–µ–Ω–∫–æ–≤.',
            'days_ago': 7,
            'rating': 4.0
        },
        {
            'author': '–í–∞–ª–µ–Ω—Ç–∏–Ω–∞ –°—Ç–µ–ø–∞–Ω–æ–≤–Ω–∞',
            'text': '–ë–ª–∞–≥–æ–¥–∞—Ä—é –∑–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é –¥–æ—Å—Ç–æ–π–Ω—ã—Ö –ø–æ—Ö–æ—Ä–æ–Ω —Å—É–ø—Ä—É–≥–∞. –í—Å–µ –±—ã–ª–æ —Å–¥–µ–ª–∞–Ω–æ –æ—á–µ–Ω—å –¥–µ–ª–∏–∫–∞—Ç–Ω–æ –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ. –í —Ç–∞–∫–∏–µ –º–æ–º–µ–Ω—Ç—ã –æ—Å–æ–±–µ–Ω–Ω–æ –≤–∞–∂–Ω–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ –ø–æ–Ω–∏–º–∞–Ω–∏–µ.',
            'days_ago': 30,
            'rating': 5.0
        },
        {
            'author': '–ù–∏–∫–æ–ª–∞–π –ü.',
            'text': '–û—Ç–ª–∏—á–Ω—ã–π —Å–µ—Ä–≤–∏—Å, –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ü–µ–Ω—ã. –†–µ–∫–æ–º–µ–Ω–¥—É—é.',
            'days_ago': 18,
            'rating': 5.0
        },
        {
            'author': '–õ—é–¥–º–∏–ª–∞ –ò–≤–∞–Ω–æ–≤–Ω–∞',
            'text': '–û—á–µ–Ω—å –±–ª–∞–≥–æ–¥–∞—Ä–Ω–∞ –∑–∞ –ø–æ–º–æ—â—å. –í —Ç—Ä—É–¥–Ω—É—é –º–∏–Ω—É—Ç—É –ø–æ–ª—É—á–∏–ª–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É. –í—Å–µ –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–Ω–æ –Ω–∞ –≤—ã—Å–æ–∫–æ–º —É—Ä–æ–≤–Ω–µ, —Ü–µ–Ω—ã —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤—ã–µ.',
            'days_ago': 45,
            'rating': 4.0
        },
        {
            'author': '–ê–Ω–¥—Ä–µ–π –°.',
            'text': '–°–ø–∞—Å–∏–±–æ –∑–∞ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—É—é —Ä–∞–±–æ—Ç—É –∏ —á–µ–ª–æ–≤–µ—á–Ω–æ–µ –æ—Ç–Ω–æ—à–µ–Ω–∏–µ.',
            'days_ago': 6,
            'rating': 5.0
        },
        {
            'author': '–ì–∞–ª–∏–Ω–∞ –ú–∏—Ö–∞–π–ª–æ–≤–Ω–∞',
            'text': '–û–±—Ä–∞—â–∞–ª–∏—Å—å –¥–ª—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –ø–æ—Ö–æ—Ä–æ–Ω –º–∞–º—ã. –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –ø—Ä–æ—è–≤–∏–ª–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é –¥–µ–ª–∏–∫–∞—Ç–Ω–æ—Å—Ç—å –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–∏–∑–º. –í—Å–µ –≤–æ–ø—Ä–æ—Å—ã —Ä–µ—à–∞–ª–∏—Å—å –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ. –ë–æ–ª—å—à–æ–µ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–µ —Å–ø–∞—Å–∏–±–æ.',
            'days_ago': 14,
            'rating': 5.0
        },
        {
            'author': '–¢–∞—Ç—å—è–Ω–∞ –í–ª–∞–¥–∏–º–∏—Ä–æ–≤–Ω–∞',
            'text': '–í—ã—Ä–∞–∂–∞—é –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º –∑–∞ —Ç–∞–∫—Ç–∏—á–Ω–æ—Å—Ç—å –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥. –í—Å–µ –±—ã–ª–æ –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–Ω–æ –Ω–∞ –≤—ã—Å—à–µ–º —É—Ä–æ–≤–Ω–µ.',
            'days_ago': 9,
            'rating': 5.0
        },
        {
            'author': '–ò–≥–æ—Ä—å',
            'text': '–•–æ—Ä–æ—à–∏–µ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã, –ø–æ–º–æ–≥–ª–∏ —Ä–µ—à–∏—Ç—å –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã –±—ã—Å—Ç—Ä–æ –∏ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ.',
            'days_ago': 25,
            'rating': 4.0
        },
        {
            'author': '–ú–∞—Ä–∏—è –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–Ω–∞',
            'text': '–†–µ–∫–æ–º–µ–Ω–¥—É—é —ç—Ç—É —Å–ª—É–∂–±—É. –î–µ–ª–∏–∫–∞—Ç–Ω—ã–π –ø–æ–¥—Ö–æ–¥, –≤–Ω–∏–º–∞–Ω–∏–µ –∫ –¥–µ—Ç–∞–ª—è–º, —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤—ã–µ —Ü–µ–Ω—ã.',
            'days_ago': 11,
            'rating': 5.0
        }
    ]

    # –ê–≤–∞—Ç–∞—Ä—ã (–Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç —Å –∞–≤–∞—Ç–∞—Ä–∞–º–∏, –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –±–µ–∑)
    avatar_urls = [
        'https://avatars.yandex.net/get-yapic/123/456-789',
        'https://avatars.yandex.net/get-yapic/456/789-123',
        'https://avatars.yandex.net/get-yapic/789/123-456',
        None, None, None  # –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –±–µ–∑ –∞–≤–∞—Ç–∞—Ä–æ–≤
    ]

    now = datetime.now()
    added_count = 0

    print("üìù –î–æ–±–∞–≤–ª—è—é –æ—Ç–∑—ã–≤—ã –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö...")

    for i, review_data in enumerate(mock_reviews_data, 1):
        publish_date = now - timedelta(days=review_data['days_ago'])
        source_url = random.choice(yandex_urls)

        new_review = Review(
            source='yandex',
            source_name='–Ø–Ω–¥–µ–∫—Å.–ë–∏–∑–Ω–µ—Å',
            source_url=source_url,
            author_name=review_data['author'],
            author_avatar_url=random.choice(avatar_urls),
            review_text=review_data['text'],
            rating=review_data['rating'],
            publish_date=publish_date,
            created_at=now
        )

        session.add(new_review)
        added_count += 1

        stars = "‚≠ê" * int(review_data['rating']) + "‚òÜ" * (5 - int(review_data['rating']))
        print(f"  {i:2d}. {review_data['author']} - {review_data['rating']} {stars}")

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
    session.commit()
    session.close()

    print(f"\n‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ {added_count} –æ—Ç–∑—ã–≤–æ–≤ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö!")
    print(f"üìä –í—Å–µ–≥–æ –æ—Ç–∑—ã–≤–æ–≤ –≤ –ë–î: {added_count}")

    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    ratings = [r['rating'] for r in mock_reviews_data]
    avg_rating = sum(ratings) / len(ratings)
    rating_counts = {}
    for rating in ratings:
        rating_counts[rating] = rating_counts.get(rating, 0) + 1

    print(f"\n‚≠ê –°–¢–ê–¢–ò–°–¢–ò–ö–ê –†–ï–ô–¢–ò–ù–ì–û–í:")
    print(f"–°—Ä–µ–¥–Ω–∏–π —Ä–µ–π—Ç–∏–Ω–≥: {avg_rating:.1f} –∏–∑ 5")
    for rating in sorted(rating_counts.keys(), reverse=True):
        stars = "‚≠ê" * int(rating)
        print(f"  {rating} {stars}: {rating_counts[rating]} –æ—Ç–∑—ã–≤–æ–≤")

if __name__ == "__main__":
    fill_database_with_mock_data()