/**
 * –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä HTML —Å—Ç—Ä–∞–Ω–∏—Ü –¥–ª—è MPA
 * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–µ—Ç HTML —Ñ–∞–π–ª—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü
 */

import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

const __dirname = path.dirname(fileURLToPath(import.meta.url));
const ROOT_DIR = path.resolve(__dirname, '..');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü
const PAGES_CONFIG = {
  index: {
    title: '–†–∏—Ç—É–∞–ª—å–Ω–∞—è —Å–ª—É–∂–±–∞ –í–µ–∫ - –ü–æ–º–æ—â—å –≤ —Ç—Ä—É–¥–Ω—É—é –º–∏–Ω—É—Ç—É | –®—É—è',
    description: '–†–∏—Ç—É–∞–ª—å–Ω–∞—è —Å–ª—É–∂–±–∞ –í–µ–∫ –≤ –®—É–µ. –ö—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–∞—è –ø–æ–º–æ—â—å –≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –ø–æ—Ö–æ—Ä–æ–Ω, –∫—Ä–µ–º–∞—Ü–∏–∏, –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ –ø–∞–º—è—Ç–Ω–∏–∫–æ–≤. –ó–≤–æ–Ω–∏—Ç–µ: +7 (920) 366-36-36',
    keywords: '—Ä–∏—Ç—É–∞–ª—å–Ω–∞—è —Å–ª—É–∂–±–∞, –ø–æ—Ö–æ—Ä–æ–Ω—ã, –®—É—è, –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –ø–æ—Ö–æ—Ä–æ–Ω, –∫—Ä–µ–º–∞—Ü–∏—è, –ø–∞–º—è—Ç–Ω–∏–∫–∏, —Ä–∏—Ç—É–∞–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏',
    ogTitle: '–†–∏—Ç—É–∞–ª—å–Ω–∞—è —Å–ª—É–∂–±–∞ –í–µ–∫ - –ü–æ–º–æ—â—å –≤ —Ç—Ä—É–¥–Ω—É—é –º–∏–Ω—É—Ç—É | –®—É—è',
    ogDescription: '–ö—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–∞—è —Ä–∏—Ç—É–∞–ª—å–Ω–∞—è —Å–ª—É–∂–±–∞ –≤ –®—É–µ. –ü–æ–ª–Ω—ã–π –∫–æ–º–ø–ª–µ–∫—Å —É—Å–ª—É–≥: –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –ø–æ—Ö–æ—Ä–æ–Ω, –∫—Ä–µ–º–∞—Ü–∏—è, –ø–∞–º—è—Ç–Ω–∏–∫–∏. –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è.',
    canonicalUrl: 'https://—Ä–∏—Ç—É–∞–ª-–≤–µ–∫.—Ä—Ñ/',
    dataPage: 'home',
    preloadHeroImage: true
  },
  uslugi: {
    title: '–†–∏—Ç—É–∞–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏ –≤ –®—É–µ: –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –ø–æ—Ö–æ—Ä–æ–Ω –∏ –∫—Ä–µ–º–∞—Ü–∏—è ‚Äì –†–∏—Ç—É–∞–ª—å–Ω–∞—è —Å–ª—É–∂–±–∞ –í–µ–∫',
    description: '–ü–æ–ª–Ω—ã–π –∫–æ–º–ø–ª–µ–∫—Å —Ä–∏—Ç—É–∞–ª—å–Ω—ã—Ö —É—Å–ª—É–≥ –≤ –®—É–µ: –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –ø–æ—Ö–æ—Ä–æ–Ω, –∫—Ä–µ–º–∞—Ü–∏—è, –ø–µ—Ä–µ–≤–æ–∑–∫–∞ —Ç–µ–ª–∞, –ø–∞–º—è—Ç–Ω–∏–∫–∏. –ö—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–∞—è —Å–ª—É–∂–±–∞ –í–µ–∫. –ó–≤–æ–Ω–∏—Ç–µ: +7 (920) 366-36-36',
    keywords: '—Ä–∏—Ç—É–∞–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏, –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –ø–æ—Ö–æ—Ä–æ–Ω, –∫—Ä–µ–º–∞—Ü–∏—è, –®—É—è, –ø–µ—Ä–µ–≤–æ–∑–∫–∞ —Ç–µ–ª–∞, –ø–∞–º—è—Ç–Ω–∏–∫–∏, –ø—Ä–æ—â–∞–ª—å–Ω—ã–µ –∑–∞–ª—ã',
    ogTitle: '–†–∏—Ç—É–∞–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏ –≤ –®—É–µ ‚Äì –†–∏—Ç—É–∞–ª—å–Ω–∞—è —Å–ª—É–∂–±–∞ –í–µ–∫',
    ogDescription: '–ü–æ–ª–Ω—ã–π –∫–æ–º–ø–ª–µ–∫—Å —Ä–∏—Ç—É–∞–ª—å–Ω—ã—Ö —É—Å–ª—É–≥: –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –ø–æ—Ö–æ—Ä–æ–Ω, –∫—Ä–µ–º–∞—Ü–∏—è, –ø–∞–º—è—Ç–Ω–∏–∫–∏, –ø—Ä–æ—â–∞–ª—å–Ω—ã–µ –∑–∞–ª—ã. –î–µ–ª–∏–∫–∞—Ç–Ω–∞—è –ø–æ–º–æ—â—å –≤ —Ç—Ä—É–¥–Ω—É—é –º–∏–Ω—É—Ç—É.',
    canonicalUrl: 'https://—Ä–∏—Ç—É–∞–ª-–≤–µ–∫.—Ä—Ñ/uslugi/',
    dataPage: 'uslugi',
    preloadHeroImage: false
  },
  privacy: {
    title: '–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ | –†–∏—Ç—É–∞–ª—å–Ω–∞—è —Å–ª—É–∂–±–∞ –í–µ–∫',
    description: '–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö —Ä–∏—Ç—É–∞–ª—å–Ω–æ–π —Å–ª—É–∂–±—ã –í–µ–∫ –≤ –®—É–µ. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞—â–∏—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.',
    keywords: '–ø–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏, –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, —Ä–∏—Ç—É–∞–ª—å–Ω–∞—è —Å–ª—É–∂–±–∞ –í–µ–∫, –®—É—è',
    ogTitle: '–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ ‚Äì –†–∏—Ç—É–∞–ª—å–Ω–∞—è —Å–ª—É–∂–±–∞ –í–µ–∫',
    ogDescription: '–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö —Å–ª—É–∂–±—ã –í–µ–∫.',
    canonicalUrl: 'https://—Ä–∏—Ç—É–∞–ª-–≤–µ–∫.—Ä—Ñ/privacy/',
    dataPage: 'privacy',
    preloadHeroImage: false
  }
};

// –ë–∞–∑–æ–≤—ã–π —à–∞–±–ª–æ–Ω HTML
function generateHtmlTemplate(pageConfig) {
  const {
    title,
    description,
    keywords,
    ogTitle,
    ogDescription,
    canonicalUrl,
    dataPage,
    preloadHeroImage
  } = pageConfig;

  const preloadScript = preloadHeroImage ? `
    <script>
      // –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∞ hero –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –¥–ª—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
      document.addEventListener('DOMContentLoaded', function() {
        const rootElement = document.getElementById('root');
        if (rootElement && rootElement.getAttribute('data-page') === 'home') {
          const heroImageLink = document.createElement('link');
          heroImageLink.rel = 'preload';
          heroImageLink.as = 'image';
          heroImageLink.href = '/src/assets/images-optimized/hero/hero-main.webp';
          heroImageLink.type = 'image/webp';
          document.head.appendChild(heroImageLink);
        }
      });
    </script>` : '';

  return `<!doctype html>
<html lang="ru">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <!-- SEO Meta Tags -->
    <title>${title}</title>
    <meta name="description" content="${description}" />
    <meta name="keywords" content="${keywords}" />
    <link rel="canonical" href="${canonicalUrl}" />
    <meta name="robots" content="index, follow" />

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content="${canonicalUrl}" />
    <meta property="og:title" content="${ogTitle}" />
    <meta property="og:description" content="${ogDescription}" />
    <meta property="og:image" content="https://—Ä–∏—Ç—É–∞–ª-–≤–µ–∫.—Ä—Ñ/assets/office-facade-CENYA-P5.webp" />
    <meta property="og:site_name" content="–†–∏—Ç—É–∞–ª—å–Ω–∞—è —Å–ª—É–∂–±–∞ –í–µ–∫" />
    <meta property="og:locale" content="ru_RU" />

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content="${canonicalUrl}" />
    <meta property="twitter:title" content="${ogTitle}" />
    <meta property="twitter:description" content="${ogDescription}" />
    <meta property="twitter:image" content="https://—Ä–∏—Ç—É–∞–ª-–≤–µ–∫.—Ä—Ñ/assets/office-facade-CENYA-P5.webp" />

    <!-- Favicons -->
    <link rel="icon" type="image/x-icon" href="/src/assets/favicons/favicon.ico" />
    <link rel="icon" type="image/png" sizes="16x16" href="/src/assets/favicons/favicon-16x16.png" />
    <link rel="icon" type="image/png" sizes="32x32" href="/src/assets/favicons/favicon-32x32.png" />
    <link rel="apple-touch-icon" sizes="180x180" href="/src/assets/favicons/apple-touch-icon.png" />
    <link rel="manifest" href="/src/assets/favicons/site.webmanifest" />

    <!-- Preconnect to external domains -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />

    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;500;600;700&family=Roboto:wght@300;400;500;700&display=swap" rel="stylesheet" />

    <!-- DNS Prefetch -->
    <link rel="dns-prefetch" href="//www.google-analytics.com" />
    <link rel="dns-prefetch" href="//www.googletagmanager.com" />
    ${preloadScript}
  </head>
  <body>
    <div id="root" data-page="${dataPage}"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>`;
}

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è HTML —Ñ–∞–π–ª–æ–≤
function generateHtmlPages() {
  console.log('üèóÔ∏è  –ì–µ–Ω–µ—Ä–∞—Ü–∏—è HTML —Å—Ç—Ä–∞–Ω–∏—Ü...');

  Object.entries(PAGES_CONFIG).forEach(([pageName, config]) => {
    const htmlContent = generateHtmlTemplate(config);

    if (pageName === 'index') {
      // –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –æ—Å—Ç–∞–µ—Ç—Å—è –≤ –∫–æ—Ä–Ω–µ
      const filePath = path.join(ROOT_DIR, 'index.html');
      fs.writeFileSync(filePath, htmlContent, 'utf8');
      console.log(`‚úÖ –°–æ–∑–¥–∞–Ω index.html`);
    } else {
      // –û—Å—Ç–∞–ª—å–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–æ–∑–¥–∞–µ–º –≤ –ø–∞–ø–∫–∞—Ö
      const dirPath = path.join(ROOT_DIR, pageName);
      const filePath = path.join(dirPath, 'index.html');

      // –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
      if (!fs.existsSync(dirPath)) {
        fs.mkdirSync(dirPath, { recursive: true });
      }

      fs.writeFileSync(filePath, htmlContent, 'utf8');
      console.log(`‚úÖ –°–æ–∑–¥–∞–Ω ${pageName}/index.html`);
    }
  });

  console.log('üéâ –í—Å–µ HTML —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
}

// –ó–∞–ø—É—Å–∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
if (import.meta.url === `file://${process.argv[1]}`) {
  generateHtmlPages();
}

export { generateHtmlPages, PAGES_CONFIG };